<?php
defined('BASEPATH') or exit('No direct script access allowed');

// Include the main TCPDF library
require_once APPPATH . 'third_party/tcpdf/tcpdf.php';

class Pdf extends TCPDF
{

    protected $ci;

    public function __construct($orientation = 'P', $unit = 'mm', $format = 'A4', $unicode = true, $encoding = 'UTF-8', $diskcache = false, $pdfa = false)
    {
        parent::__construct($orientation, $unit, $format, $unicode, $encoding, $diskcache, $pdfa);

        $this->ci = &get_instance();

        // Set default metadata
        $this->SetCreator(PDF_CREATOR);
        $this->SetAuthor('Your Application');
        $this->SetTitle('PDF Document');
        $this->SetSubject('Generated by CodeIgniter 3');
        $this->SetKeywords('TCPDF, PDF, CodeIgniter');

        // Set default header data
        $this->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE, PDF_HEADER_STRING);

        // Set header and footer fonts
        $this->setHeaderFont(array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
        $this->setFooterFont(array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));

        // Set default monospaced font
        $this->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);

        // Set margins
        $this->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
        $this->SetHeaderMargin(PDF_MARGIN_HEADER);
        $this->SetFooterMargin(PDF_MARGIN_FOOTER);

        // Set auto page breaks
        $this->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);

        // Set image scale factor
        $this->setImageScale(PDF_IMAGE_SCALE_RATIO);

        // Set some language-dependent strings
        $this->setLanguageArray($this->ci->config->item('tcpdf_language'));
    }

    // Custom Header
    public function Header()
    {
        // Logo
        $image_file = APPPATH . '../assets/images/logo.png';
        if (file_exists($image_file)) {
            $this->Image($image_file, 10, 5, 25, '', 'PNG', '', 'T', false, 300, '', false, false, 0, false, false, false);
        }

        // Set font
        $this->SetFont('helvetica', 'B', 20);

        // Title - centered on page
        // $this->SetY(15);
        // $this->Cell(0, 15, 'WARINGIN GROUP', 0, false, 'C', 0, '', 0, false, 'M', 'M');
    }

    // Custom Footer
    public function Footer()
    {
        // Position at 15 mm from bottom
        $this->SetY(-15);

        // Set font
        $this->SetFont('helvetica', 'I', 8);

        // Page number
        $this->Cell(0, 10, 'Page ' . $this->getAliasNumPage() . '/' . $this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');
    }

    // Simple HTML to PDF method
    public function generate_html_pdf($html, $filename = 'document.pdf', $download = true)
    {
        // Add a page
        $this->AddPage();

        // Set font
        $this->SetFont('helvetica', '', 10);

        // Output HTML content
        $this->writeHTML($html, true, false, true, false, '');

        // Output PDF
        if ($download) {
            $this->Output($filename, 'D');
        } else {
            $this->Output($filename, 'I');
        }
    }

    // Generate PDF from view
    public function generate_from_view($view_name, $data = array(), $filename = 'document.pdf', $download = true)
    {
        // Load the view content
        $html = $this->ci->load->view($view_name, $data, TRUE);

        // Generate PDF
        $this->generate_html_pdf($html, $filename, $download);
    }
}
